package net.lyx.dbframework.dao.entity;

import lombok.*;

import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.function.BinaryOperator;
import java.util.stream.Collectors;

@Getter
@ToString(onlyExplicitlyIncluded = true)
@EqualsAndHashCode
@Builder(toBuilder = true)
public class Entity implements Cloneable {

    private static BinaryOperator<Element> throwingMerger() {
        return (u, v) -> { throw new IllegalStateException(String.format("Duplicate key %s", u)); };
    }

    @ToString.Include
    private final String name;
    private final Class<?> type;

    @ToString.Include
    private final List<Element> elements;

    private Element key;

    public Element getKey() {
        prepareKey();
        return key;
    }

    public Map<String, Element> toMap() {
        return elements.stream()
                .collect(Collectors.toMap(
                        Element::getShortName, element -> element,
                        throwingMerger(), TreeMap::new
                ));
    }

    private void prepareKey() {
        if (key == null) {
            boolean hasGeneratedKey = elements.stream().anyMatch(Element::isAutoGenerated);
            key = elements.stream()
                    .filter(Element::isPrimary)
                    .filter(element -> !hasGeneratedKey || element.isAutoGenerated())
                    .findFirst().orElse(null);
        }
    }

    @Override
    public Entity clone() {
        return new Entity(name, type, elements, key);
    }
}
